version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: mystockproject_postgres
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/database:/docker-entrypoint-initdb.d
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: mystockproject_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@mystockproject.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin123}
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./scripts/database/pgadmin_servers.json:/pgadmin4/servers.json
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@postgres:5432/${DATABASE_NAME}
      - TZ=America/Chicago
      - FINNHUB_API_KEY=${FINNHUB_API_KEY:-demo}
      - SCHWAB_CLIENT_ID=${SCHWAB_CLIENT_ID}
      - SCHWAB_CLIENT_SECRET=${SCHWAB_CLIENT_SECRET}
      - SCHWAB_REFRESH_TOKEN=${SCHWAB_REFRESH_TOKEN}
      - SCHWAB_BASE_URL=${SCHWAB_BASE_URL:-https://api.schwabapi.com}
      # Technical compute tail/window settings
      - TECH_TAIL_DAYS=${TECH_TAIL_DAYS:-800}
      - TECH_BUFFER_DAYS=${TECH_BUFFER_DAYS:-30}
      - TECH_MIN_ROWS=${TECH_MIN_ROWS:-252}
    volumes:
      - ./backend:/app
      - C:\Users\raghu\Downloads:/downloads
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"

  external-apis:
    build: ./external-apis
    ports:
      - "8003:8003"
    environment:
      - TZ=America/Chicago
      - FINNHUB_API_KEY=${FINNHUB_API_KEY:-demo}
      - SCHWAB_CLIENT_ID=${SCHWAB_CLIENT_ID}
      - SCHWAB_CLIENT_SECRET=${SCHWAB_CLIENT_SECRET}
      - SCHWAB_REFRESH_TOKEN=${SCHWAB_REFRESH_TOKEN}
      - SCHWAB_REDIRECT_URI=${SCHWAB_REDIRECT_URI}
      - SCHWAB_BASE_URL=${SCHWAB_BASE_URL:-https://api.schwabapi.com}
    volumes:
      - ./external-apis:/app
    networks:
      - app-network

  jobs-service:
    build: ./jobs-service
    ports:
      - "8004:8004"
    environment:
      - DATABASE_URL=postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@postgres:5432/${DATABASE_NAME}
      - TZ=America/Chicago
      - TIMEZONE=America/Chicago
      - BACKEND_URL=http://backend:8000
      - EXTERNAL_APIS_URL=http://external-apis:8003
      - KEEP_JOB_HISTORY=5
      - TTL_CLEANUP_DAYS=30
      - MARKET_OPEN_HOUR=9
      - MARKET_CLOSE_HOUR=16
      # EOD Scan Performance Settings
      - EOD_WORKERS=20
      - EOD_MAX_RPS=15
      - EOD_REQ_SLEEP_MS=0
      # Technical Analysis Settings
      - TECH_MIN_ROWS=10
    volumes:
      - ./jobs-service:/app
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
      external-apis:
        condition: service_started
    extra_hosts:
      - "host.docker.internal:host-gateway"

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - TZ=America/Chicago
      - VITE_API_URL=http://backend:8000
      - VITE_SYNCFUSION_LICENSE_KEY=${SYNCFUSION_LICENSE_KEY:-}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network
    depends_on:
      - backend
      - external-apis
      - jobs-service

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data:
